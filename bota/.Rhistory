library(ggplot2)
library(tidyverse)
library(forcats)
library(factoextra)
library(jcolors)
library(goeveg)
library(ggplot2)
library(ggrepel)
library(RColorBrewer)
library(remedy)
dat_prabs <- read.table("data_bota_prabs.csv", header=T, sep=";", dec=".")
summary(dat_prabs)
str(dat_prabs)
dat_prabs <- dat_prabs[,c(-1)]
# il y a plusieurs sites qui sont splittes en deux
# on cree des colonnes pour combiner les deux parties
# Pour Eychauda torrent :
dat_prabs$EYCH_torr_tot <- dat_prabs$EYCH_torr_EFG
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,9] == 1)
dat_prabs[i,21] <- 1
else NULL
}
# Pour Maurienne planay torrent :
dat_prabs$MAUR_torr_tot <- dat_prabs$MAUR_planay_torr_ABCD
# for (i in 1:nrow(dat)){
# if (dat[i,13] == 1)
#  dat[i,22] <- 1
# else NULL
# }
# Pour Vallouise moraine haut :
dat_prabs$VALL_mor_haut_tot <- dat_prabs$VALL_mor_haut_ABCD
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,17] == 1)
dat_prabs[i,23] <- 1
else NULL
}
dat_prabs <- dat_prabs[,c(-9,-10,-13,-14,-17,-18)] # On enleve les colonnes qui ne servent plus
# Creation des data frames par annee
d18 <- which(dat_prabs$year == "2018")
dat_prabs_18 <- dat_prabs[d18,]
d21 <- which(dat_prabs$year == "2021")
dat_prabs_21 <- dat_prabs[d21,]
rownames(dat_prabs_18) <- dat_prabs_18$species
dat_prabs_18 <- dat_prabs_18[,c(-1,-2)]
rownames(dat_prabs_21) <- dat_prabs_21$species
dat_prabs_21 <- dat_prabs_21[,c(-1,-2)]
# on transpose le data frame
t_dat_prabs_18 <- as.data.frame(t(dat_prabs_18))
t_dat_prabs_21 <- as.data.frame(t(dat_prabs_21))
t_dat_prabs <- as.data.frame(t(dat_prabs))
x <- c("BER_carr","BER_cari","BER_clap","BER_lac1","BER_lac2",
"VAL_eyme","MAU_arpo","MAU_plah","VAL_glab","VAL_moba",
"VIL_bas","VIL_haut","VAL_eyto","MAU_plto","VAL_moha")
rownames(t_dat_prabs_18) <- x
rownames(t_dat_prabs_21) <- x
rownames(t_dat_prabs) <- x
rich_18 <- rowSums(t_dat_prabs_18)
site_18 <- rownames(t_dat_prabs_18)
rich_21 <- rowSums(t_dat_prabs_21)
richness <- data.frame(site_18, rich_18, rich_21)
richness$secteur <- c(rep("VENEON",5), "VALLOUISE", rep("MAURIENNE",2), rep("VALLOUISE",2), rep("VILLAROGER",2),
"VALLOUISE","MAURIENNE","VALLOUISE")
richness$secteur <- as.factor(richness$secteur)
richness_long <- richness %>% pivot_longer(
cols = paste0(c("rich_18", "rich_21")), names_to = "year",
names_prefix = "rich_", values_to = "rich",
values_drop_na = FALSE)
student_rich <- t.test(rich_18, rich_21, paired = TRUE)
ggplot(richness_long, aes(x = site_18, y = rich, fill = year)) +
geom_bar(stat = "identity", width =.4, position=position_dodge(), size = 1) +
scale_fill_manual(values = c("olivedrab3","orange","turquoise4","blueviolet")) +
theme(legend.position = "right", axis.text.x = element_text(angle = 90)) +
xlab("Site") +
ylab("Specific richness") +
annotate("text", x = 4.2, y = 35, label = "P-value Student T.test Specific richness : ") +
annotate("text", x = 8.5, y = 35, label = round(student_rich$p.value, 4))
## POUR 2018
# barplot(specnumber(t_dat_prabs_18), las = 2) # species richness
specpool(t_dat_prabs_18, smallsample = TRUE) # c'est pareil avec ou sans le small sample
#estimateR(t_dat_prabs_18)
#accum18 <- specaccum(t_dat_prabs_18, method = "random")
#plot(accum18, random = FALSE, ci.type = "polygon", ci.col = "grey", col = "red")
#preston18 <- prestonfit(colSums(t_dat_prabs_18))
#plot(preston18)
#veiledspec(preston18)
specpool(t_dat_prabs_21, smallsample = TRUE)
beta_18 <- vegdist(t_dat_prabs_18, binary = TRUE, method = "jaccard")
beta_18
mb18 <- mean(beta_18)
beta_21 <- vegdist(t_dat_prabs_21, binary = TRUE, method = "jaccard")
beta_21
mb21 <- mean(beta_21)
sites <- x
taxons <- rownames(dat_prabs_21)
dat <- vector("list", length(sites))
for (i in 1:length(sites))
{
dat[[i]] <- cbind(taxons, df_prabs_18[,i],df_prabs_21[,i])
}
for (i in 1:length(sites))
{
test[[i]] <- cbind(taxons, df_prabs_18[,i],df_prabs_21[,i])
}
sites <- x
taxons <- rownames(dat_prabs_21)
dat <- vector("list", length(sites))
for (i in 1:length(sites))
{
dat[[i]] <- cbind(df_prabs_18[i],df_prabs_21[i])
}
taxons <- rownames(dat_prabs_21)
colnames(dat_prabs_18) <- paste0(colnames(dat_prabs_18),"18")
colnames(dat_prabs_21) <- paste0(colnames(dat_prabs_21),"21")
dat <- vector("list", length(dat_prabs_18))
for (i in 1:ncol(dat_prabs_18))
{
dat[[i]] <- cbind(df_prabs_18[i],df_prabs_21[i])
}
View(dat)
View(dat[[1]])
names(dat) <- x
taxons <- rownames(dat_prabs_21)
colnames(dat_prabs_18) <- paste0(colnames(dat_prabs_18),"18")
colnames(dat_prabs_21) <- paste0(colnames(dat_prabs_21),"21")
dat <- vector("list", length(dat_prabs_18))
for (i in 1:ncol(dat_prabs_18))
{
dat[[i]] <- cbind(df_prabs_18[i],df_prabs_21[i])
}
names(dat) <- x
View(dat)
for (i in 1:15) {
for (j in 1:15)
dat[i] <- t(frame[[j]])
}
for (i in 1:15){
dat[i] <- t(frame[i])
}
dat[i] <- t(dat[i])
dat[["BER_carr"]]
# essai de faire les distances deux à deux mais on ne peut metn data set en input de vegdist
taxons <- rownames(dat_prabs_21)
colnames(dat_prabs_18) <- paste0(colnames(dat_prabs_18),"18")
colnames(dat_prabs_21) <- paste0(colnames(dat_prabs_21),"21")
dat <- vector("list", length(dat_prabs_18))
for (i in 1:ncol(dat_prabs_18)) {
dat[[i]] <- cbind(dat_prabs_18[i],dat_prabs_21[i])
}
names(dat) <- x
# on a un data frame par site pour les deux années.
for (i in 1:15) {
dat[i] <- t(dat[i])
}
dat[["BER_carr"]]
# on a un data frame par site pour les deux années.
t_dat <- vector ("liste", lenght(dat))
# on a un data frame par site pour les deux années.
t_dat <- vector ("liste", length(dat))
# on a un data frame par site pour les deux années.
t_dat <- vector ("list", length(dat))
for (i in 1:15) {
t_dat[i] <- t(dat[i])
}
View(t_dat)
t_dat[[1]]
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(vegan)
library(ggplot2)
library(tidyverse)
library(forcats)
library(factoextra)
library(jcolors)
library(goeveg)
library(ggplot2)
library(ggrepel)
library(RColorBrewer)
library(remedy)
dat_prabs <- read.table("data_bota_prabs.csv", header=T, sep=";", dec=".")
summary(dat_prabs)
str(dat_prabs)
dat_prabs <- dat_prabs[,c(-1)]
# il y a plusieurs sites qui sont splittes en deux
# on cree des colonnes pour combiner les deux parties
# Pour Eychauda torrent :
dat_prabs$EYCH_torr_tot <- dat_prabs$EYCH_torr_EFG
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,9] == 1)
dat_prabs[i,21] <- 1
else NULL
}
# Pour Maurienne planay torrent :
dat_prabs$MAUR_torr_tot <- dat_prabs$MAUR_planay_torr_ABCD
# for (i in 1:nrow(dat)){
# if (dat[i,13] == 1)
#  dat[i,22] <- 1
# else NULL
# }
# Pour Vallouise moraine haut :
dat_prabs$VALL_mor_haut_tot <- dat_prabs$VALL_mor_haut_ABCD
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,17] == 1)
dat_prabs[i,23] <- 1
else NULL
}
dat_prabs <- dat_prabs[,c(-9,-10,-13,-14,-17,-18)] # On enleve les colonnes qui ne servent plus
# Creation des data frames par annee
d18 <- which(dat_prabs$year == "2018")
dat_prabs_18 <- dat_prabs[d18,]
d21 <- which(dat_prabs$year == "2021")
dat_prabs_21 <- dat_prabs[d21,]
rownames(dat_prabs_18) <- dat_prabs_18$species
dat_prabs_18 <- dat_prabs_18[,c(-1,-2)]
rownames(dat_prabs_21) <- dat_prabs_21$species
dat_prabs_21 <- dat_prabs_21[,c(-1,-2)]
# on transpose le data frame
t_dat_prabs_18 <- as.data.frame(t(dat_prabs_18))
t_dat_prabs_21 <- as.data.frame(t(dat_prabs_21))
t_dat_prabs <- as.data.frame(t(dat_prabs))
x <- c("BER_carr","BER_cari","BER_clap","BER_lac1","BER_lac2",
"VAL_eyme","MAU_arpo","MAU_plah","VAL_glab","VAL_moba",
"VIL_bas","VIL_haut","VAL_eyto","MAU_plto","VAL_moha")
rownames(t_dat_prabs_18) <- x
rownames(t_dat_prabs_21) <- x
rownames(t_dat_prabs) <- x
rich_18 <- rowSums(t_dat_prabs_18)
site_18 <- rownames(t_dat_prabs_18)
rich_21 <- rowSums(t_dat_prabs_21)
richness <- data.frame(site_18, rich_18, rich_21)
richness$secteur <- c(rep("VENEON",5), "VALLOUISE", rep("MAURIENNE",2), rep("VALLOUISE",2), rep("VILLAROGER",2),
"VALLOUISE","MAURIENNE","VALLOUISE")
richness$secteur <- as.factor(richness$secteur)
richness_long <- richness %>% pivot_longer(
cols = paste0(c("rich_18", "rich_21")), names_to = "year",
names_prefix = "rich_", values_to = "rich",
values_drop_na = FALSE)
student_rich <- t.test(rich_18, rich_21, paired = TRUE)
ggplot(richness_long, aes(x = site_18, y = rich, fill = year)) +
geom_bar(stat = "identity", width =.4, position=position_dodge(), size = 1) +
scale_fill_manual(values = c("olivedrab3","orange","turquoise4","blueviolet")) +
theme(legend.position = "right", axis.text.x = element_text(angle = 90)) +
xlab("Site") +
ylab("Specific richness") +
annotate("text", x = 4.2, y = 35, label = "P-value Student T.test Specific richness : ") +
annotate("text", x = 8.5, y = 35, label = round(student_rich$p.value, 4))
## POUR 2018
# barplot(specnumber(t_dat_prabs_18), las = 2) # species richness
specpool(t_dat_prabs_18, smallsample = TRUE) # c'est pareil avec ou sans le small sample
#estimateR(t_dat_prabs_18)
#accum18 <- specaccum(t_dat_prabs_18, method = "random")
#plot(accum18, random = FALSE, ci.type = "polygon", ci.col = "grey", col = "red")
#preston18 <- prestonfit(colSums(t_dat_prabs_18))
#plot(preston18)
#veiledspec(preston18)
specpool(t_dat_prabs_21, smallsample = TRUE)
beta_18 <- vegdist(t_dat_prabs_18, binary = TRUE, method = "jaccard")
beta_18
mb18 <- mean(beta_18)
beta_21 <- vegdist(t_dat_prabs_21, binary = TRUE, method = "jaccard")
beta_21
mb21 <- mean(beta_21)
taxons <- rownames(dat_prabs_21)
colnames(dat_prabs_18) <- paste0(colnames(dat_prabs_18),"18")
colnames(dat_prabs_21) <- paste0(colnames(dat_prabs_21),"21")
dat <- vector("list", length(dat_prabs_18))
for (i in 1:ncol(dat_prabs_18)) {
dat[[i]] <- cbind(dat_prabs_18[i],dat_prabs_21[i])
}
names(dat) <- x
View(dat)
dat[["BER_carr"]]
for (i in 1:15) {
t_dat[i] <- t(as.data.frame(dat[i]))
}
# on a un data frame par site pour les deux années.
t_dat <- vector ("list", length(dat))
for (i in 1:15) {
t_dat[i] <- t(as.data.frame(dat[i]))
}
t_dat[[1]]
for (i in 1:15) {
t_dat[[i]] <- t(as.data.frame(dat[i]))
}
t_dat[[1]]
names(t_dat) <- paste0(x,"_t")
View(t_dat)
t_dat[["BER_carr_t"]]
# on a un data frame par site pour les deux années.
t_dat <- vector ("list", length(dat))
for (i in 1:15) {
t_dat[[i]] <- t(as.data.frame(dat[i]))
t_dat[[i]] <- as.data.frame(t_dat[i])
}
names(t_dat) <- paste0(x,"_t")
t_dat[["BER_carr_t"]]
t_dat[[1]] <- t(as.data.frame(dat[1]))
t_dat[[1]]
test <- t_dat[[1]]
t_dat[[1]] <- t(dat[1])
test <- t_dat[[1]]
t_dat <- vector ("list", length(dat))
for (i in 1:15) {
t_dat[[i]] <- as.data.frame(t(dat[i]))
}
names(t_dat) <- paste0(x,"_t")
View(t_dat)
t_dat[["BER_carr_t"]]
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(vegan)
library(ggplot2)
library(tidyverse)
library(forcats)
library(factoextra)
library(jcolors)
library(goeveg)
library(ggplot2)
library(ggrepel)
library(RColorBrewer)
library(remedy)
dat_prabs <- read.table("data_bota_prabs.csv", header=T, sep=";", dec=".")
summary(dat_prabs)
str(dat_prabs)
dat_prabs <- dat_prabs[,c(-1)]
# il y a plusieurs sites qui sont splittes en deux
# on cree des colonnes pour combiner les deux parties
# Pour Eychauda torrent :
dat_prabs$EYCH_torr_tot <- dat_prabs$EYCH_torr_EFG
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,9] == 1)
dat_prabs[i,21] <- 1
else NULL
}
# Pour Maurienne planay torrent :
dat_prabs$MAUR_torr_tot <- dat_prabs$MAUR_planay_torr_ABCD
# for (i in 1:nrow(dat)){
# if (dat[i,13] == 1)
#  dat[i,22] <- 1
# else NULL
# }
# Pour Vallouise moraine haut :
dat_prabs$VALL_mor_haut_tot <- dat_prabs$VALL_mor_haut_ABCD
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,17] == 1)
dat_prabs[i,23] <- 1
else NULL
}
dat_prabs <- dat_prabs[,c(-9,-10,-13,-14,-17,-18)] # On enleve les colonnes qui ne servent plus
# Creation des data frames par annee
d18 <- which(dat_prabs$year == "2018")
dat_prabs_18 <- dat_prabs[d18,]
d21 <- which(dat_prabs$year == "2021")
dat_prabs_21 <- dat_prabs[d21,]
rownames(dat_prabs_18) <- dat_prabs_18$species
dat_prabs_18 <- dat_prabs_18[,c(-1,-2)]
rownames(dat_prabs_21) <- dat_prabs_21$species
dat_prabs_21 <- dat_prabs_21[,c(-1,-2)]
# on transpose le data frame
t_dat_prabs_18 <- as.data.frame(t(dat_prabs_18))
t_dat_prabs_21 <- as.data.frame(t(dat_prabs_21))
t_dat_prabs <- as.data.frame(t(dat_prabs))
x <- c("BER_carr","BER_cari","BER_clap","BER_lac1","BER_lac2",
"VAL_eyme","MAU_arpo","MAU_plah","VAL_glab","VAL_moba",
"VIL_bas","VIL_haut","VAL_eyto","MAU_plto","VAL_moha")
rownames(t_dat_prabs_18) <- x
rownames(t_dat_prabs_21) <- x
rownames(t_dat_prabs) <- x
rich_18 <- rowSums(t_dat_prabs_18)
site_18 <- rownames(t_dat_prabs_18)
rich_21 <- rowSums(t_dat_prabs_21)
richness <- data.frame(site_18, rich_18, rich_21)
richness$secteur <- c(rep("VENEON",5), "VALLOUISE", rep("MAURIENNE",2), rep("VALLOUISE",2), rep("VILLAROGER",2),
"VALLOUISE","MAURIENNE","VALLOUISE")
richness$secteur <- as.factor(richness$secteur)
richness_long <- richness %>% pivot_longer(
cols = paste0(c("rich_18", "rich_21")), names_to = "year",
names_prefix = "rich_", values_to = "rich",
values_drop_na = FALSE)
student_rich <- t.test(rich_18, rich_21, paired = TRUE)
ggplot(richness_long, aes(x = site_18, y = rich, fill = year)) +
geom_bar(stat = "identity", width =.4, position=position_dodge(), size = 1) +
scale_fill_manual(values = c("olivedrab3","orange","turquoise4","blueviolet")) +
theme(legend.position = "right", axis.text.x = element_text(angle = 90)) +
xlab("Site") +
ylab("Specific richness") +
annotate("text", x = 4.2, y = 35, label = "P-value Student T.test Specific richness : ") +
annotate("text", x = 8.5, y = 35, label = round(student_rich$p.value, 4))
## POUR 2018
# barplot(specnumber(t_dat_prabs_18), las = 2) # species richness
specpool(t_dat_prabs_18, smallsample = TRUE) # c'est pareil avec ou sans le small sample
#estimateR(t_dat_prabs_18)
#accum18 <- specaccum(t_dat_prabs_18, method = "random")
#plot(accum18, random = FALSE, ci.type = "polygon", ci.col = "grey", col = "red")
#preston18 <- prestonfit(colSums(t_dat_prabs_18))
#plot(preston18)
#veiledspec(preston18)
specpool(t_dat_prabs_21, smallsample = TRUE)
beta_18 <- vegdist(t_dat_prabs_18, binary = TRUE, method = "jaccard")
beta_18
mb18 <- mean(beta_18)
beta_21 <- vegdist(t_dat_prabs_21, binary = TRUE, method = "jaccard")
beta_21
mb21 <- mean(beta_21)
taxons <- rownames(dat_prabs_21)
colnames(dat_prabs_18) <- paste0(colnames(dat_prabs_18),"18")
colnames(dat_prabs_21) <- paste0(colnames(dat_prabs_21),"21")
dat <- vector("list", length(dat_prabs_18))
for (i in 1:ncol(dat_prabs_18)) {
dat[[i]] <- cbind(dat_prabs_18[i],dat_prabs_21[i])
}
names(dat) <- x
# on a un data frame par site pour les deux années.
t_dat <- vector ("list", length(dat))
for (i in 1:15) {
t_dat[[i]] <- as.data.frame(t(dat[i]))
}
names(t_dat) <- paste0(x,"_t")
View(t_dat)
t_dat <- vector ("list", length(dat))
for (i in 1:15) {
t_dat[[i]] <- (t(dat[i]))
}
names(t_dat) <- paste0(x,"_t")
t_dat[["BER_carr_t"]]
t_dat <- vector ("list", length(dat))
for (i in 1:15) {
t_dat[[i]] <- (t(as.data.frame(dat[i])))
}
t_dat[[1]]
test <- t_dat[[1]]
test <- as.matrix(test)
View(test)
test <- as.data.frame(as.matrix(test))
View(test)
t_dat <- vector ("list", length(dat))
for (i in 1:15) {
t_dat[[i]] <- (t(as.data.frame(dat[i])))
t_dat[[i]] <- as.data.frame(as.matrix(t_dat[i]))
}
names(t_dat) <- paste0(x,"_t")
t_dat[["BER_carr_t"]]
t_dat <- vector ("list", length(dat))
for (i in 1:15) {
t_dat[[i]] <- (t(as.data.frame(dat[i])))
t_dat[[i]] <- as.data.frame(as.matrix(t_dat[[i]]))
}
names(t_dat) <- paste0(x,"_t")
View(t_dat)
t_dat[["BER_carr_t"]]
v_dist <- vector("list", length(t_dat))
for (i in 1:15) {
v_dist[[i]] <- vegdist(t_dat[[i]], binary = TRUE, method = "jaccard")
}
View(v_dist)
names(v_dist) <- paste0(x,"_jaccard")
v_dist <- vector("data.frame", length(t_dat))
as.data.frame(v_dist)
as.matrix(v_dist)
as.data.frame(as.matrix(v_dist))
test <- as.matrix(v_dist)
View(test)
test <- as.data.frame(test)
View(test)
v_dist <- vector("list", length(t_dat))
for (i in 1:15) {
v_dist[[i]] <- vegdist(t_dat[[i]], binary = TRUE, method = "jaccard")
}
names(v_dist) <- paste0(x,"_jaccard")
test <-
test <- as.data.frame(as.matrix(v_dist))
View(test)
df_v_dist <- as.data.frame(as.matrix(v_dist))
colnames(df_v_dist) <- "jaccard"
View(df_v_dist)
df_v_dist %>%
kbl() %>%
kable_paper(full_width = F) %>%
column_spec(1, color = "white",
background = spec_color(df_v_dist$jaccard, end = 0.7))
library(kableExtra)
df_v_dist %>%
kbl() %>%
kable_paper(full_width = F) %>%
column_spec(1, color = "white",
background = spec_color(df_v_dist$jaccard, end = 0.7))
df_v_dist %>%
kbl() %>%
kable_paper(full_width = F) %>%
column_spec(1, color = "white",
background = spec_color(df_v_dist$jaccard, end = 0.7)) %>%
pack_rows("Bérarde", 1, 5)
spec_color(
df_v_dist$jaccard,
alpha = 1,
begin = 0,
end = 1,
direction = 1,
option = "D",
)
View(df_v_dist)
df_v_dist %>%
kbl() %>%
kable_paper(full_width = F) %>%
column_spec(1,background = spec_color(df_v_dist$jaccard, begin = 0, end = 1)) %>%
pack_rows("Bérarde", 1, 5)
class(df_v_dist)
df_v_dist %>%
kbl() %>%
kable_paper(full_width = F) %>%
column_spec(1, background = spec_color(df_v_dist$jaccard, begin = 0, end = 1))
hist(df_v_dist)
hist(df_v_dist$jaccard)
df_v_dist$jaccard
