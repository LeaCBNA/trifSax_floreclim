knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(vegan)
library(ggplot2)
library(tidyverse)
library(forcats)
library(factoextra)
library(jcolors)
library(goeveg)
library(ggplot2)
library(ggrepel)
library(RColorBrewer)
library(remedy)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(vegan)
library(ggplot2)
library(tidyverse)
library(forcats)
library(factoextra)
library(jcolors)
library(goeveg)
library(ggplot2)
library(ggrepel)
library(RColorBrewer)
library(remedy)
dat_prabs <- read.table("data_bota_prabs.csv", header=T, sep=";", dec=".")
summary(dat_prabs)
str(dat_prabs)
dat_prabs <- read.table("data_bota_prabs.csv", header=T, sep=";", dec=".")
summary(dat_prabs)
str(dat_prabs)
dat_prabs <- dat_prabs[,c(-1, -22:-37)]
# il y a plusieurs sites qui sont splittes en deux
# on cree des colonnes pour combiner les deux parties
# Pour Eychauda torrent :
dat_prabs$EYCH_torr_tot <- dat_prabs$EYCH_torr_EFG
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,9] == 1)
dat_prabs[i,21] <- 1
else NULL
}
# Pour Maurienne planay torrent :
dat_prabs$MAUR_torr_tot <- dat_prabs$MAUR_planay_torr_ABCD
# for (i in 1:nrow(dat)){
# if (dat[i,13] == 1)
#  dat[i,22] <- 1
# else NULL
# }
# Pour Vallouise moraine haut :
dat_prabs$VALL_mor_haut_tot <- dat_prabs$VALL_mor_haut_ABCD
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,17] == 1)
dat_prabs[i,23] <- 1
else NULL
}
dat_prabs <- dat_prabs[,c(-9,-10,-13,-14,-17,-18)] # On enl?ve les colonnes qui ne servent plus
# Creation des data frames par annee
dat_prabs_18 <- dat_prabs[c(18:122),]
dat_prabs_21 <- dat_prabs[c(123:244),]
rownames(dat_prabs_18) <- dat_prabs_18$species
dat_prabs_18 <- dat_prabs_18[,c(-1,-2)]
rownames(dat_prabs_21) <- dat_prabs_21$species
levels(dat_prabs_21$species)
summary(dat_prabs_21$species)
dat_prabs <- read.table("data_bota_prabs.csv", header=T, sep=";", dec=".")
summary(dat_prabs)
str(dat_prabs)
View(dat_prabs)
dat_prabs <- dat_prabs[,c(-1)]
dat_prabs$EYCH_torr_tot <- dat_prabs$EYCH_torr_EFG
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,9] == 1)
dat_prabs[i,21] <- 1
else NULL
}
# Pour Maurienne planay torrent :
dat_prabs$MAUR_torr_tot <- dat_prabs$MAUR_planay_torr_ABCD
# for (i in 1:nrow(dat)){
# if (dat[i,13] == 1)
#  dat[i,22] <- 1
# else NULL
# }
# Pour Vallouise moraine haut :
dat_prabs$VALL_mor_haut_tot <- dat_prabs$VALL_mor_haut_ABCD
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,17] == 1)
dat_prabs[i,23] <- 1
else NULL
}
dat_prabs <- dat_prabs[,c(-9,-10,-13,-14,-17,-18)] # On enleve les colonnes qui ne servent plus
which(dat_prabs$annee == "2018")
d18 <- which(dat_prabs$annee == 2018) #We keep only year 1
d18 <- which(dat_prabs$annee == "2018") #We keep only year 1
d18 <- which(dat_prabs$year == "2018") #We keep only year 1
d18 <- which(dat_prabs$year == "2018")
dat_prabs_18 <- dat_prabs[d18,]
d21 <- which(dat_prabs$year == "2021")
dat_prabs_21 <- dat_prabs[d21,]
rownames(dat_prabs_18) <- dat_prabs_18$species
dat_prabs_18 <- dat_prabs_18[,c(-1,-2)]
rownames(dat_prabs_21) <- dat_prabs_21$species
dat_prabs_21$species
dat_pourc <- read.table("data_bota_pourc.csv", header=T, sep=";", dec=".")
dat_pourc[dat_pourc=="+"] <- 0.1 # remplacement du + BB pour faire le BBtransf
View(dat_pourc)
## 2014
nmds_1_2014 <- as.data.frame(dat_pourc[c(3:20)])
## 2018
nmds_1_2018_pour <- as.data.frame(dat_pourc[c(3:20),])
View(nmds_1_2018_pour)
## 2018
nmds_1_2018_pour <- as.data.frame(dat_pourc[,c(-2,-3)])
nmds_2018_pour <- nmds_1_2018_pour[,c(-1)]
nmds_2018_pour <- nmds_2018_pour[,c(1:17)] %>%
map_dfr(as.numeric)
nmds_2018_pour <- as.matrix(nmds_2018_pour)
set.seed(123)
nmds_tot_2018_pour <- metaMDS(nmds_2018_pour, trymax = 100, distance = "bray", binary = FALSE)
dat_pourc[dat_pourc==""] <- 0 # remplacement du + BB pour faire le BBtransf
View(dat_pourc)
nmds_1_2018_pour <- as.data.frame(dat_pourc[,c(-2,-3)])
nmds_2018_pour <- nmds_1_2018_pour[,c(-1)]
nmds_2018_pour <- nmds_2018_pour[,c(1:17)] %>%
map_dfr(as.numeric)
nmds_2018_pour <- as.matrix(nmds_2018_pour)
set.seed(123)
nmds_tot_2018_pour <- metaMDS(nmds_2018_pour, trymax = 100, distance = "bray", binary = FALSE)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(vegan)
library(ggplot2)
library(tidyverse)
library(forcats)
library(factoextra)
library(jcolors)
library(goeveg)
library(ggplot2)
library(ggrepel)
library(RColorBrewer)
library(remedy)
dat_pourc <- t(dat_pourc)
dat_pourc <- as.data.frame(t(dat_pourc))
View(dat_pourc)
dat_pourc <- t(dat_pourc)
colnames(dat_pourc) <- dat_pourc[1,]
dat_pourc <- dat_pourc[-1,]
dat_pourc <- as.data.frame(dat_pourc)
View(dat_pourc)
d18 <- which(dat_pourc$year == "2018")
dat_pourc_18 <- dat_pourc[d18,]
d21 <- which(dat_pourc$year == "2021")
dat_pourc_21 <- dat_pourc[d21,]
dat_pourc_18 <- t(dat_pourc_18[-2,])
View(dat_pourc_18)
dat_pourc <- read.table("data_bota_pourc.csv", header=T, sep=";", dec=".")
dat_pourc[dat_pourc=="+"] <- 0.1 # remplacement du + BB pour faire le BBtransf
dat_pourc[dat_pourc==""] <- 0 # remplacement du + BB pour faire le BBtransf
d18 <- which(dat_pourc$year == "2018")
dat_pourc_18 <- dat_pourc[d18,]
d21 <- which(dat_pourc$year == "2021")
dat_pourc_21 <- dat_pourc[d21,]
dat_pourc_18 <- t(dat_pourc_18[-2,])
colnames(dat_pourc_18) <- dat_pourc_18[1,]
dat_pourc_18 <- dat_pourc_18[-1,]
dat_pourc_18 <- as.data.frame(dat_pourc_18)
View(dat_pourc_18)
dat_pourc <- read.table("data_bota_pourc.csv", header=T, sep=";", dec=".")
dat_pourc[dat_pourc=="+"] <- 0.1 # remplacement du + BB pour faire le BBtransf
dat_pourc[dat_pourc==""] <- 0 # remplacement du + BB pour faire le BBtransf
d18 <- which(dat_pourc$year == "2018")
dat_pourc_18 <- dat_pourc[d18,]
d21 <- which(dat_pourc$year == "2021")
dat_pourc_21 <- dat_pourc[d21,]
dat_pourc_18 <- t(dat_pourc_18[,-2])
colnames(dat_pourc_18) <- dat_pourc_18[1,]
dat_pourc_18 <- dat_pourc_18[-1,]
dat_pourc_18 <- as.data.frame(dat_pourc_18)
View(dat_pourc_18)
## 2018
nmds_1_2018_pour <- as.data.frame(dat_pourc_18)
## 2018
nmds_2018_pour <- as.data.frame(dat_pourc_18)
nmds_2018_pour <- nmds_2018_pour[,c(1:18)] %>%
map_dfr(as.numeric)
## 2018
nmds_2018_pour <- as.data.frame(dat_pourc_18)
nmds_2018_pour <- nmds_2018_pour[,c(1:137)] %>%
map_dfr(as.numeric)
nmds_2018_pour <- as.matrix(nmds_2018_pour)
set.seed(123)
nmds_tot_2018_pour <- metaMDS(nmds_2018_pour, trymax = 100, distance = "bray", binary = FALSE)
nmds_2018_pour <- as.matrix(nmds_2018_pour)
View(dat_pourc_18)
## 2018
nmds_2018_pour <- as.data.frame(dat_pourc_18[,(-3)]) # on enlève la colonne pleine de NA
nmds_2018_pour <- nmds_2018_pour[,c(1:137)] %>%
map_dfr(as.numeric)
nmds_2018_pour <- nmds_2018_pour[,c(1:136)] %>%
map_dfr(as.numeric)
nmds_2018_pour <- as.matrix(nmds_2018_pour)
set.seed(123)
nmds_tot_2018_pour <- metaMDS(nmds_2018_pour, trymax = 100, distance = "bray", binary = FALSE)
View(nmds_2018_pour)
View(dat_pourc_18)
## 2018
nmds_2018_pour <- as.data.frame(dat_pourc_18[(-3),]) # on enlève la colonne pleine de NA
nmds_2018_pour <- nmds_2018_pour[,c(1:136)] %>%
map_dfr(as.numeric)
nmds_2018_pour <- as.matrix(nmds_2018_pour)
set.seed(123)
nmds_tot_2018_pour <- metaMDS(nmds_2018_pour, trymax = 100, distance = "bray", binary = FALSE)
nmds_2018_pour <- nmds_2018_pour[,c(1:137)] %>%
map_dfr(as.numeric)
## 2018
nmds_2018_pour <- as.data.frame(dat_pourc_18[(-3),]) # on enlève la colonne pleine de NA
View(nmds_2018_pour)
View(dat_pourc)
