xlab="T_sax community sample", sub="Ward D2 joining cluster")
t_dat_prabs_coph_ward_18 <- cophenetic(t_dat_prabs_clus_ward_18)
cor(beta_18, t_dat_prabs_coph_ward_18) # comme complete
#
t_dat_prabs_clus_sing_18 <- hclust(beta_18, method = "single")
par(mar=c(6,4,2,2))
plot(t_dat_prabs_clus_sing_18, hang = -1, main="Jaccard Beta diversity ", ylab="Beta values",
xlab="T_sax community sample", sub="Single joining cluster")
t_dat_prabs_coph_sing_18 <- cophenetic(t_dat_prabs_clus_sing_18)
cor(beta_18, t_dat_prabs_coph_sing_18) # comme complete
#
t_dat_prabs_clus_med_18 <- hclust(beta_18, method = "median")
par(mar=c(6,4,2,2))
plot(t_dat_prabs_clus_med_18, hang = -1, main="Jaccard Beta diversity ", ylab="Beta values",
xlab="T_sax community sample", sub="WPGMC joining cluster")
t_dat_prabs_coph_med_18 <- cophenetic(t_dat_prabs_clus_med_18)
cor(beta_18, t_dat_prabs_coph_med_18) # nul
#
t_dat_prabs_clus_quit_18 <- hclust(beta_18, method = "mcquitty")
par(mar=c(6,4,2,2))
plot(t_dat_prabs_clus_quit_18, hang = -1, main="Jaccard Beta diversity ", ylab="Beta values",
xlab="T_sax community sample", sub="WPGMA joining cluster")
t_dat_prabs_coph_quit_18 <- cophenetic(t_dat_prabs_clus_quit_18)
cor(beta_18, t_dat_prabs_coph_quit_18) # pas mal ! comme average presque mais en + le plot a une meilleure t?te
#
t_dat_prabs_clus_cent_18 <- hclust(beta_18, method = "centroid")
par(mar=c(6,4,2,2))
plot(t_dat_prabs_clus_cent_18, hang = -1, main="Jaccard Beta diversity ", ylab="Beta values",
xlab="T_sax community sample", sub="UPGMC joining cluster")
t_dat_prabs_coph_cent_18 <- cophenetic(t_dat_prabs_clus_cent_18)
cor(beta_18, t_dat_prabs_coph_cent_18) # pourri
t_dat_prabs_clus_quit_18 <- hclust(beta_18, method = "mcquitty")
par(mar=c(6,4,2,2))
plot(t_dat_prabs_clus_quit_18, hang = -1, main="Jaccard Beta diversity ", ylab="Beta values",
xlab="T_sax community sample", sub="WPGMA joining cluster")
t_dat_prabs_coph_quit_18 <- cophenetic(t_dat_prabs_clus_quit_18)
cor(beta_18, t_dat_prabs_coph_quit_18)
fviz_dend(t_dat_prabs_clus_quit_18, k = 8, palette = "Paired", cex = 0.75, lwd = 1.5,
color_labels_by_k = FALSE, ylab = "Beta values",
main = "Jaccard Beta diversity - WPGMA joining cluster - 2018")
# https://rdrr.io/cran/goeveg/man/dimcheckMDS.html
# avec deux dimensions on n'est pas trop mal meme si 3 seraient bien
# https://jonlefcheck.net/2012/10/24/nmds-tutorial-in-r/
dimcheckMDS(t_dat_prabs_18, distance = "jaccard", k = 6, trymax = 100, autotransform = FALSE)
NMDS_18 <- metaMDS(t_dat_prabs_18, distance = "jaccard", binary = TRUE, trymax = 100, k = 2)
NMDS_18 # on passe d'un stress de 0.11 avec 3 dimensions, a un stress de 0.18 avec deux dimensions
stressplot(NMDS_18)
secteur <- c(rep("VENEON",5), "VALLOUISE", rep("MAURIENNE",2), rep("VALLOUISE",2), rep("VILLAROGER",2),
"VALLOUISE","MAURIENNE","VALLOUISE")
# secteurs
ordiplot(NMDS_18, type = "n")
orditorp(NMDS_18, display = "species", col = "black", air = 0.01, label = F)
orditorp(NMDS_18, display = "sites",
col = c(rep("turquoise4",5), "orange", rep("olivedrab3",2), rep("orange",2), rep("blueviolet",2), "orange", "olivedrab3", "orange"),
air = 0.01, cex = 1.25)
# clustering
ordiplot(NMDS_18, type="n")
ordicluster(NMDS_18, hclust(vegdist(t_dat_prabs_18, binary = TRUE, method = "jaccard"), method = "mcquitty"))
orditorp(NMDS_18, display ="species",col = "black", air = 0.01, label = F)
orditorp(NMDS_18, display = "sites",
col = c(rep("turquoise4",5), "orange", rep("olivedrab3",2), rep("orange",2), rep("blueviolet",2), "orange", "olivedrab3", "orange"),
air = 0.01, cex = 1.25)
# ?
x <- rowSums(dat_prabs_18)
taxons_18 <- as.data.frame(rownames(dat_prabs_18))
taxons_18$somme <- x
supp_18 <- which(taxons_18$somme == 0)
taxons_18 <- taxons_18[-supp_18,]
tax_18 <- taxons_18[,1]
y <- rowSums(dat_prabs_21)
taxons_21 <- as.data.frame(rownames(dat_prabs_21))
taxons_21$somme <- y
supp_21 <- which(taxons_21$somme == 0)
taxons_21 <- taxons_21[-supp_21,]
tax_21 <- taxons_21[,1]
#
# création de vecteurs contenant la liste des espèces pour chaque site et chaque année
dat_prabs_18_tax <- dat_prabs_18[,-16]
for (j in 1:ncol(dat_prabs_18_tax)){
for (i in 1:nrow(dat_prabs_18_tax)){
if (dat_prabs_18_tax[i,j] > 0)
dat_prabs_18_tax[i,j] <- rownames(dat_prabs_18_tax[i,])
else NULL
}}
dat_prabs_18_tax[dat_prabs_18_tax == 0] <- NA
dat_prabs_21_tax <- dat_prabs_21[,c(6,9,10,13,15)] # conserver toutes les lignes une fois tout saisi
for (j in 1:ncol(dat_prabs_21_tax)){
for (i in 1:nrow(dat_prabs_21_tax)){
if (dat_prabs_21_tax[i,j] > 0)
dat_prabs_21_tax[i,j] <- rownames(dat_prabs_21_tax[i,])
else NULL
}}
dat_prabs_21_tax[dat_prabs_21_tax == 0] <- NA
chr_list_18 = list()
for (j in 1:ncol(dat_prabs_18_tax)) {
chr_18 <- na.omit(dat_prabs_18_tax[,j])
chr_list_18[[j]] = chr_18
}
names(chr_list_18) <- paste(colnames(dat_prabs_18_tax),"_18", sep='')
chr_list_21 = list()
for (j in 1:ncol(dat_prabs_21_tax)) {
chr_21 <- na.omit(dat_prabs_21_tax[,j])
chr_list_21[[j]] = chr_21
}
names(chr_list_21) <- paste(colnames(dat_prabs_21_tax),"_21", sep='')
# exemple de comparaison de données
intersect(chr_list_21$EYCH_meleze_21, chr_list_18$EYCH_meleze_18)
a1 <- setdiff(chr_list_21$EYCH_meleze_21, chr_list_18$EYCH_meleze_18) # elements dans 21 mais pas dans 18
a2 <- setdiff(chr_list_18$EYCH_meleze_18, chr_list_21$EYCH_meleze_21)
# De nombreuses espèces supplémentaires en 21 mais on est sur une placette très grande donc il y a
#probabalement de la sous-observation en 18.
barplot(specnumber(t_dat_prabs_18), las = 2) # species richness
# on transpose le data frame
t_dat_prabs_18 <- as.data.frame(t(dat_prabs_18))
t_dat_prabs_21 <- as.data.frame(t(dat_prabs_21))
x <- c("BER_carr","BER_cari","BER_clap","BER_lac1","BER_lac2",
"VAL_eyme","MAU_arpo","MAU_plah","VAL_glab","VAL_moba",
"VIL_bas","VIL_haut","VAL_eyto","MAU_plto","VAL_moha")
rownames(t_dat_prabs_18) <- x
rownames(t_dat_prabs_21) <- x
rich_18 <- rowSums(t_dat_prabs_18)
site_18 <- rownames(t_dat_prabs_18)
rich_21 <- rowSums(t_dat_prabs_21)
richness <- data.frame(site_18, rich_18, rich_21)
richness$secteur <- c(rep("VENEON",5), "VALLOUISE", rep("MAURIENNE",2), rep("VALLOUISE",2), rep("VILLAROGER",2),
"VALLOUISE","MAURIENNE","VALLOUISE")
mb21
beta_18 <- vegdist(t_dat_prabs_18, binary = TRUE, method = "jaccard")
beta_18
mb18 <- mean(beta_18)
beta_21 <- vegdist(t_dat_prabs_21, binary = TRUE, method = "jaccard")
beta_21
mb21 <- mean(beta_21)
mb21
beta_18 <- vegdist(t_dat_prabs_18, binary = TRUE, method = "jaccard")
beta_18
mb18 <- mean(beta_18)
beta_21 <- vegdist(t_dat_prabs_21, binary = TRUE, method = "jaccard")
beta_21
mb21 <- mean(beta_21)
beta_tot <- vegdist(t_dat_prabs_18, t_dat_prabs_21, binary = TRUE, method = "jaccard")
beta_tot
beta_tot <- vegdist(t_dat_prabs_18, t_dat_prabs_21, binary = TRUE, method = "jaccard")
beta_tot
beta_tot <- as.data.frame(beta_tot)
beta_tot <- as.matrix(beta_tot)
View(beta_tot)
beta_18 <- vegdist(t_dat_prabs_18, binary = TRUE, method = "jaccard")
beta_18
mb18 <- mean(beta_18)
beta_21 <- vegdist(t_dat_prabs_21, binary = TRUE, method = "jaccard")
beta_21
mb21 <- mean(beta_21)
beta_tot <- vegdist(t_dat_prabs_18, t_dat_prabs_21, binary = TRUE, method = "jaccard")
beta_tot
beta_tot <- vegdist(t_dat_prabs_18, t_dat_prabs_21, binary = TRUE, method = "jaccard")
beta_tot <- as.matrix(beta_tot)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(vegan)
library(ggplot2)
library(tidyverse)
library(forcats)
library(factoextra)
library(jcolors)
library(goeveg)
library(ggplot2)
library(ggrepel)
library(RColorBrewer)
library(remedy)
dat_prabs <- read.table("data_bota_prabs.csv", header=T, sep=";", dec=".")
summary(dat_prabs)
str(dat_prabs)
dat_prabs <- dat_prabs[,c(-1)]
# il y a plusieurs sites qui sont splittes en deux
# on cree des colonnes pour combiner les deux parties
# Pour Eychauda torrent :
dat_prabs$EYCH_torr_tot <- dat_prabs$EYCH_torr_EFG
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,9] == 1)
dat_prabs[i,21] <- 1
else NULL
}
# Pour Maurienne planay torrent :
dat_prabs$MAUR_torr_tot <- dat_prabs$MAUR_planay_torr_ABCD
# for (i in 1:nrow(dat)){
# if (dat[i,13] == 1)
#  dat[i,22] <- 1
# else NULL
# }
# Pour Vallouise moraine haut :
dat_prabs$VALL_mor_haut_tot <- dat_prabs$VALL_mor_haut_ABCD
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,17] == 1)
dat_prabs[i,23] <- 1
else NULL
}
dat_prabs <- dat_prabs[,c(-9,-10,-13,-14,-17,-18)] # On enleve les colonnes qui ne servent plus
# Creation des data frames par annee
d18 <- which(dat_prabs$year == "2018")
dat_prabs_18 <- dat_prabs[d18,]
d21 <- which(dat_prabs$year == "2021")
dat_prabs_21 <- dat_prabs[d21,]
rownames(dat_prabs_18) <- dat_prabs_18$species
dat_prabs_18 <- dat_prabs_18[,c(-1,-2)]
rownames(dat_prabs_21) <- dat_prabs_21$species
dat_prabs_21 <- dat_prabs_21[,c(-1,-2)]
# on transpose le data frame
t_dat_prabs_18 <- as.data.frame(t(dat_prabs_18))
t_dat_prabs_21 <- as.data.frame(t(dat_prabs_21))
x <- c("BER_carr","BER_cari","BER_clap","BER_lac1","BER_lac2",
"VAL_eyme","MAU_arpo","MAU_plah","VAL_glab","VAL_moba",
"VIL_bas","VIL_haut","VAL_eyto","MAU_plto","VAL_moha")
rownames(t_dat_prabs_18) <- x
rownames(t_dat_prabs_21) <- x
rich_18 <- rowSums(t_dat_prabs_18)
site_18 <- rownames(t_dat_prabs_18)
rich_21 <- rowSums(t_dat_prabs_21)
richness <- data.frame(site_18, rich_18, rich_21)
richness$secteur <- c(rep("VENEON",5), "VALLOUISE", rep("MAURIENNE",2), rep("VALLOUISE",2), rep("VILLAROGER",2),
"VALLOUISE","MAURIENNE","VALLOUISE")
richness$secteur <- as.factor(richness$secteur)
richness_long <- richness %>% pivot_longer(
cols = paste0(c("rich_18", "rich_21")), names_to = "year",
names_prefix = "rich_", values_to = "rich",
values_drop_na = FALSE)
student_rich <- t.test(rich_18, rich_21, paired = TRUE)
ggplot(richness_long, aes(x = site_18, y = rich, fill = year)) +
geom_bar(stat = "identity", width =.4, position=position_dodge(), size = 1) +
scale_fill_manual(values = c("olivedrab3","orange","turquoise4","blueviolet")) +
theme(legend.position = "right", axis.text.x = element_text(angle = 90)) +
xlab("Site") +
ylab("Specific richness") +
annotate("text", x = 4.2, y = 35, label = "P-value Student T.test Specific richness : ") +
annotate("text", x = 8.5, y = 35, label = round(student_rich$p.value, 4))
beta_18 <- vegdist(t_dat_prabs_18, binary = TRUE, method = "jaccard")
beta_18
mb18 <- mean(beta_18)
beta_21 <- vegdist(t_dat_prabs_21, binary = TRUE, method = "jaccard")
beta_21
mb21 <- mean(beta_21)
beta_18 <- vegdist(t_dat_prabs_18, binary = TRUE, method = "jaccard")
beta_18
mb18 <- mean(beta_18)
beta_21 <- vegdist(t_dat_prabs_21, binary = TRUE, method = "jaccard")
beta_21
mb21 <- mean(beta_21)
t_dat_prabs <- as.data.frame(t(dat_prabs))
View(t_dat_prabs)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(vegan)
library(ggplot2)
library(tidyverse)
library(forcats)
library(factoextra)
library(jcolors)
library(goeveg)
library(ggplot2)
library(ggrepel)
library(RColorBrewer)
library(remedy)
dat_prabs <- read.table("data_bota_prabs.csv", header=T, sep=";", dec=".")
summary(dat_prabs)
str(dat_prabs)
dat_prabs <- dat_prabs[,c(-1)]
# il y a plusieurs sites qui sont splittes en deux
# on cree des colonnes pour combiner les deux parties
# Pour Eychauda torrent :
dat_prabs$EYCH_torr_tot <- dat_prabs$EYCH_torr_EFG
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,9] == 1)
dat_prabs[i,21] <- 1
else NULL
}
# Pour Maurienne planay torrent :
dat_prabs$MAUR_torr_tot <- dat_prabs$MAUR_planay_torr_ABCD
# for (i in 1:nrow(dat)){
# if (dat[i,13] == 1)
#  dat[i,22] <- 1
# else NULL
# }
# Pour Vallouise moraine haut :
dat_prabs$VALL_mor_haut_tot <- dat_prabs$VALL_mor_haut_ABCD
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,17] == 1)
dat_prabs[i,23] <- 1
else NULL
}
dat_prabs <- dat_prabs[,c(-9,-10,-13,-14,-17,-18)] # On enleve les colonnes qui ne servent plus
# Creation des data frames par annee
d18 <- which(dat_prabs$year == "2018")
dat_prabs_18 <- dat_prabs[d18,]
d21 <- which(dat_prabs$year == "2021")
dat_prabs_21 <- dat_prabs[d21,]
rownames(dat_prabs_18) <- dat_prabs_18$species
dat_prabs_18 <- dat_prabs_18[,c(-1,-2)]
rownames(dat_prabs_21) <- dat_prabs_21$species
dat_prabs_21 <- dat_prabs_21[,c(-1,-2)]
# on transpose le data frame
t_dat_prabs_18 <- as.data.frame(t(dat_prabs_18))
t_dat_prabs_21 <- as.data.frame(t(dat_prabs_21))
t_dat_prabs <- as.data.frame(t(dat_prabs))
x <- c("BER_carr","BER_cari","BER_clap","BER_lac1","BER_lac2",
"VAL_eyme","MAU_arpo","MAU_plah","VAL_glab","VAL_moba",
"VIL_bas","VIL_haut","VAL_eyto","MAU_plto","VAL_moha")
rownames(t_dat_prabs_18) <- x
rownames(t_dat_prabs_21) <- x
rich_18 <- rowSums(t_dat_prabs_18)
site_18 <- rownames(t_dat_prabs_18)
rich_21 <- rowSums(t_dat_prabs_21)
richness <- data.frame(site_18, rich_18, rich_21)
richness$secteur <- c(rep("VENEON",5), "VALLOUISE", rep("MAURIENNE",2), rep("VALLOUISE",2), rep("VILLAROGER",2),
"VALLOUISE","MAURIENNE","VALLOUISE")
richness$secteur <- as.factor(richness$secteur)
richness_long <- richness %>% pivot_longer(
cols = paste0(c("rich_18", "rich_21")), names_to = "year",
names_prefix = "rich_", values_to = "rich",
values_drop_na = FALSE)
student_rich <- t.test(rich_18, rich_21, paired = TRUE)
ggplot(richness_long, aes(x = site_18, y = rich, fill = year)) +
geom_bar(stat = "identity", width =.4, position=position_dodge(), size = 1) +
scale_fill_manual(values = c("olivedrab3","orange","turquoise4","blueviolet")) +
theme(legend.position = "right", axis.text.x = element_text(angle = 90)) +
xlab("Site") +
ylab("Specific richness") +
annotate("text", x = 4.2, y = 35, label = "P-value Student T.test Specific richness : ") +
annotate("text", x = 8.5, y = 35, label = round(student_rich$p.value, 4))
## POUR 2018
# barplot(specnumber(t_dat_prabs_18), las = 2) # species richness
specpool(t_dat_prabs_18, smallsample = TRUE) # c'est pareil avec ou sans le small sample
#estimateR(t_dat_prabs_18)
#accum18 <- specaccum(t_dat_prabs_18, method = "random")
#plot(accum18, random = FALSE, ci.type = "polygon", ci.col = "grey", col = "red")
#preston18 <- prestonfit(colSums(t_dat_prabs_18))
#plot(preston18)
#veiledspec(preston18)
specpool(t_dat_prabs_21, smallsample = TRUE)
beta_18 <- vegdist(t_dat_prabs_18, binary = TRUE, method = "jaccard")
beta_18
mb18 <- mean(beta_18)
beta_21 <- vegdist(t_dat_prabs_21, binary = TRUE, method = "jaccard")
beta_21
mb21 <- mean(beta_21)
beta_tot <- vegdist(t_dat_prabs_18, t_dat_prabs_21, binary = TRUE, method = "jaccard")
beta_tot <- as.matrix(beta_tot)
beta_tot
beta_tot <- vegdist(t_dat_prabs, binary = TRUE, method = "jaccard")
View(t_dat_prabs)
beta_tot <- vegdist(t_dat_prabs[-2,], binary = TRUE, method = "jaccard")
rownames(dat_prabs) <- dat_prabs$species
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(vegan)
library(ggplot2)
library(tidyverse)
library(forcats)
library(factoextra)
library(jcolors)
library(goeveg)
library(ggplot2)
library(ggrepel)
library(RColorBrewer)
library(remedy)
dat_prabs <- read.table("data_bota_prabs.csv", header=T, sep=";", dec=".")
summary(dat_prabs)
str(dat_prabs)
dat_prabs <- dat_prabs[,c(-1)]
# il y a plusieurs sites qui sont splittes en deux
# on cree des colonnes pour combiner les deux parties
# Pour Eychauda torrent :
dat_prabs$EYCH_torr_tot <- dat_prabs$EYCH_torr_EFG
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,9] == 1)
dat_prabs[i,21] <- 1
else NULL
}
# Pour Maurienne planay torrent :
dat_prabs$MAUR_torr_tot <- dat_prabs$MAUR_planay_torr_ABCD
# for (i in 1:nrow(dat)){
# if (dat[i,13] == 1)
#  dat[i,22] <- 1
# else NULL
# }
# Pour Vallouise moraine haut :
dat_prabs$VALL_mor_haut_tot <- dat_prabs$VALL_mor_haut_ABCD
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,17] == 1)
dat_prabs[i,23] <- 1
else NULL
}
dat_prabs <- dat_prabs[,c(-9,-10,-13,-14,-17,-18)] # On enleve les colonnes qui ne servent plus
# Creation des data frames par annee
d18 <- which(dat_prabs$year == "2018")
dat_prabs_18 <- dat_prabs[d18,]
d21 <- which(dat_prabs$year == "2021")
dat_prabs_21 <- dat_prabs[d21,]
rownames(dat_prabs_18) <- dat_prabs_18$species
dat_prabs_18 <- dat_prabs_18[,c(-1,-2)]
rownames(dat_prabs_21) <- dat_prabs_21$species
dat_prabs_21 <- dat_prabs_21[,c(-1,-2)]
# on transpose le data frame
t_dat_prabs_18 <- as.data.frame(t(dat_prabs_18))
t_dat_prabs_21 <- as.data.frame(t(dat_prabs_21))
# on fait pareil pour le dataset global
rownames(dat_prabs) <- dat_prabs$species
dat_prabs$species
levels(dat_prabs$species)
str(dat_prabs)
duplicated(dat_prabs$species)
View(dat_prabs)
dat_prabs <- read.table("data_bota_prabs.csv", header=T, sep=";", dec=".")
summary(dat_prabs)
str(dat_prabs)
dat_prabs <- read.table("data_bota_prabs.csv", header=T, sep=";", dec=".")
summary(dat_prabs)
str(dat_prabs)
dat_prabs$species <- as.factor(dat_prabs$species)
str(dat_prabs)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(vegan)
library(ggplot2)
library(tidyverse)
library(forcats)
library(factoextra)
library(jcolors)
library(goeveg)
library(ggplot2)
library(ggrepel)
library(RColorBrewer)
library(remedy)
dat_prabs <- read.table("data_bota_prabs.csv", header=T, sep=";", dec=".")
summary(dat_prabs)
str(dat_prabs)
dat_prabs <- dat_prabs[,c(-1)]
# il y a plusieurs sites qui sont splittes en deux
# on cree des colonnes pour combiner les deux parties
# Pour Eychauda torrent :
dat_prabs$EYCH_torr_tot <- dat_prabs$EYCH_torr_EFG
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,9] == 1)
dat_prabs[i,21] <- 1
else NULL
}
# Pour Maurienne planay torrent :
dat_prabs$MAUR_torr_tot <- dat_prabs$MAUR_planay_torr_ABCD
# for (i in 1:nrow(dat)){
# if (dat[i,13] == 1)
#  dat[i,22] <- 1
# else NULL
# }
# Pour Vallouise moraine haut :
dat_prabs$VALL_mor_haut_tot <- dat_prabs$VALL_mor_haut_ABCD
for (i in 1:nrow(dat_prabs)){
if (dat_prabs[i,17] == 1)
dat_prabs[i,23] <- 1
else NULL
}
dat_prabs <- dat_prabs[,c(-9,-10,-13,-14,-17,-18)] # On enleve les colonnes qui ne servent plus
# Creation des data frames par annee
d18 <- which(dat_prabs$year == "2018")
dat_prabs_18 <- dat_prabs[d18,]
d21 <- which(dat_prabs$year == "2021")
dat_prabs_21 <- dat_prabs[d21,]
rownames(dat_prabs_18) <- dat_prabs_18$species
dat_prabs_18 <- dat_prabs_18[,c(-1,-2)]
rownames(dat_prabs_21) <- dat_prabs_21$species
dat_prabs_21 <- dat_prabs_21[,c(-1,-2)]
# on transpose le data frame
t_dat_prabs_18 <- as.data.frame(t(dat_prabs_18))
t_dat_prabs_21 <- as.data.frame(t(dat_prabs_21))
t_dat_prabs <- as.data.frame(t(dat_prabs))
x <- c("BER_carr","BER_cari","BER_clap","BER_lac1","BER_lac2",
"VAL_eyme","MAU_arpo","MAU_plah","VAL_glab","VAL_moba",
"VIL_bas","VIL_haut","VAL_eyto","MAU_plto","VAL_moha")
rownames(t_dat_prabs_18) <- x
rownames(t_dat_prabs_21) <- x
rownames(t_dat_prabs) <- x
rich_18 <- rowSums(t_dat_prabs_18)
site_18 <- rownames(t_dat_prabs_18)
rich_21 <- rowSums(t_dat_prabs_21)
richness <- data.frame(site_18, rich_18, rich_21)
richness$secteur <- c(rep("VENEON",5), "VALLOUISE", rep("MAURIENNE",2), rep("VALLOUISE",2), rep("VILLAROGER",2),
"VALLOUISE","MAURIENNE","VALLOUISE")
richness$secteur <- as.factor(richness$secteur)
richness_long <- richness %>% pivot_longer(
cols = paste0(c("rich_18", "rich_21")), names_to = "year",
names_prefix = "rich_", values_to = "rich",
values_drop_na = FALSE)
student_rich <- t.test(rich_18, rich_21, paired = TRUE)
ggplot(richness_long, aes(x = site_18, y = rich, fill = year)) +
geom_bar(stat = "identity", width =.4, position=position_dodge(), size = 1) +
scale_fill_manual(values = c("olivedrab3","orange","turquoise4","blueviolet")) +
theme(legend.position = "right", axis.text.x = element_text(angle = 90)) +
xlab("Site") +
ylab("Specific richness") +
annotate("text", x = 4.2, y = 35, label = "P-value Student T.test Specific richness : ") +
annotate("text", x = 8.5, y = 35, label = round(student_rich$p.value, 4))
## POUR 2018
# barplot(specnumber(t_dat_prabs_18), las = 2) # species richness
specpool(t_dat_prabs_18, smallsample = TRUE) # c'est pareil avec ou sans le small sample
#estimateR(t_dat_prabs_18)
#accum18 <- specaccum(t_dat_prabs_18, method = "random")
#plot(accum18, random = FALSE, ci.type = "polygon", ci.col = "grey", col = "red")
#preston18 <- prestonfit(colSums(t_dat_prabs_18))
#plot(preston18)
#veiledspec(preston18)
specpool(t_dat_prabs_21, smallsample = TRUE)
beta_18 <- vegdist(t_dat_prabs_18, binary = TRUE, method = "jaccard")
beta_18
mb18 <- mean(beta_18)
beta_21 <- vegdist(t_dat_prabs_21, binary = TRUE, method = "jaccard")
beta_21
mb21 <- mean(beta_21)
View(t_dat_prabs)
